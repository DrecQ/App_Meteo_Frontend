// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String
  name              String?
  domaineActivite   String?  // Nouveau champ pour le domaine d'activité
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  courses           UserCourse[]
  quizzes           QuizResult[]
}

model Course {
  id          String        @id @default(cuid())
  slug        String        @unique
  title       String
  description String?
  instructor  String?
  duration    String?
  lessons     Lesson[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  users       UserCourse[]
  quizResults QuizResult[]  // Relation inverse ajoutée
}

model Lesson {
  id        String   @id @default(cuid())
  title     String
  content   String
  duration  String?
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
}

model UserCourse {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  progress  Int      @default(0)
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
}

model QuizResult {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  score     Int
  date      DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
}